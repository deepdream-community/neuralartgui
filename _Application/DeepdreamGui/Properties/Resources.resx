<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="action_delete_image" xml:space="preserve">
    <value>Delete image</value>
  </data>
  <data name="action_delete_selected_images" xml:space="preserve">
    <value>Delete selected images</value>
  </data>
  <data name="action_details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="action_open_image" xml:space="preserve">
    <value>Open image</value>
  </data>
  <data name="action_open_style_image" xml:space="preserve">
    <value>Open style image</value>
  </data>
  <data name="action_process_cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="action_process_finished" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="action_process_start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="action_save_image" xml:space="preserve">
    <value>Save image</value>
  </data>
  <data name="action_save_selected_images" xml:space="preserve">
    <value>Save selected images</value>
  </data>
  <data name="action_save_selected_report" xml:space="preserve">
    <value>Save report for selected images</value>
  </data>
  <data name="action_selct_none" xml:space="preserve">
    <value>Select none</value>
  </data>
  <data name="action_select_all" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="info_base_image" xml:space="preserve">
    <value>Initial image</value>
  </data>
  <data name="info_checking_dependencies" xml:space="preserve">
    <value>Checking dependencies</value>
  </data>
  <data name="info_confirm_cancel" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="info_confirm_cancel_details" xml:space="preserve">
    <value>This will cause loosing progress of the currently processed image. Fully processed images are not affected.</value>
  </data>
  <data name="info_confirm_close" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="info_confirm_close_detail" xml:space="preserve">
    <value>Unsaved changes will be lost.</value>
  </data>
  <data name="info_confirm_delete" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="info_confirm_delete_detail" xml:space="preserve">
    <value>All detail-windows showing this image will be closed. Cannot be undone.</value>
  </data>
  <data name="info_confirm_start" xml:space="preserve">
    <value>Start processing?</value>
  </data>
  <data name="info_confirm_start_details" xml:space="preserve">
    <value>This might take a long time. Consider increasing memory size and assigned CPUs.</value>
  </data>
  <data name="info_could_not_open_file" xml:space="preserve">
    <value>Cannot open file</value>
  </data>
  <data name="info_details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="info_docker_not_installed" xml:space="preserve">
    <value>Can't find docker. Application will be terminated. Try to start Docker manually.</value>
  </data>
  <data name="info_docker_starting" xml:space="preserve">
    <value>Docker isn't running yet. Trying to start docker, this might take a while.</value>
  </data>
  <data name="info_error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="info_error_docker_container" xml:space="preserve">
    <value>Could not start Docker or the muelmx/neuralart_exec image is not installed correctly. Closing application.</value>
  </data>
  <data name="info_error_ram" xml:space="preserve">
    <value>Process was cancled. May there is not enough RAM reserved for docker. This can be changed in the docker settings. Alternatively you can lower the number of iterations or take a smaller picture.</value>
  </data>
  <data name="info_error_undefined" xml:space="preserve">
    <value>Process was cancled. An undefined error occured. Maybe the resolution of your picture is too high or the reserved RAM is too low. Errorcode:</value>
  </data>
  <data name="info_error_workingdirectory" xml:space="preserve">
    <value>Process was cancled. Maybe the working folder wasn't aprroved to docker. You can change this in the docker settings.</value>
  </data>
  <data name="info_fill_transparency" xml:space="preserve">
    <value>Transparencies will be filled</value>
  </data>
  <data name="info_fill_transparency_detail" xml:space="preserve">
    <value>The selected image might contain transparent areas that will be filled with black color. Continue?</value>
  </data>
  <data name="info_preparing" xml:space="preserve">
    <value>Preparing...</value>
  </data>
  <data name="info_process_will_be_canceled" xml:space="preserve">
    <value>Cancelling Process...</value>
  </data>
  <data name="info_rotation" xml:space="preserve">
    <value>Can't rotate.</value>
  </data>
  <data name="info_rotation_detail" xml:space="preserve">
    <value>In order to calculate the correct scaling value for rotation an image must be loaded.</value>
  </data>
  <data name="info_scaling" xml:space="preserve">
    <value>Change scaling.</value>
  </data>
  <data name="info_scaling_detail" xml:space="preserve">
    <value>In order to prevent black borders when rotating, the scaling value is changed to a new minimun automatically. This value depends on the rotation angle.</value>
  </data>
  <data name="info_select_image" xml:space="preserve">
    <value>Select image</value>
  </data>
  <data name="info_select_style" xml:space="preserve">
    <value>Select style</value>
  </data>
  <data name="info_serial" xml:space="preserve">
    <value>Serialnumber</value>
  </data>
  <data name="info_style_image" xml:space="preserve">
    <value>Style image</value>
  </data>
  <data name="info_time_remainnig" xml:space="preserve">
    <value> Time remaining: </value>
  </data>
  <data name="info_wait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="param_achieved_change" xml:space="preserve">
    <value>Achieved change</value>
  </data>
  <data name="param_achieved_change_tooltip" xml:space="preserve">
    <value>1 = Less, 10 = More</value>
  </data>
  <data name="param_comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="param_description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="param_helpsample" xml:space="preserve">
    <value>Trigger pattern</value>
  </data>
  <data name="param_helpsample_tooltip" xml:space="preserve">
    <value>Overlay for the base image. Rotation, size and transparency is adjustable. It might trigger the model to generate specific patterns (Animals etc.)</value>
  </data>
  <data name="param_intensity" xml:space="preserve">
    <value>Intensity</value>
  </data>
  <data name="param_intensity_tooltip" xml:space="preserve">
    <value>Effect intensity</value>
  </data>
  <data name="param_iterations" xml:space="preserve">
    <value>Iterations</value>
  </data>
  <data name="param_iterations_tooltip" xml:space="preserve">
    <value>Number of iterations and result images</value>
  </data>
  <data name="param_maxsidelength" xml:space="preserve">
    <value>Max side length</value>
  </data>
  <data name="param_maxsidelength_tooltip" xml:space="preserve">
    <value>Scaling the image, so the longer side length matches the number.</value>
  </data>
  <data name="param_model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="param_model_tooltip" xml:space="preserve">
    <value>Model used for image processing</value>
  </data>
  <data name="param_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="param_octave" xml:space="preserve">
    <value>Octave</value>
  </data>
  <data name="param_octave_tooltip" xml:space="preserve">
    <value>Deepness of the model</value>
  </data>
  <data name="param_picture" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="param_rotate" xml:space="preserve">
    <value>Rotation</value>
  </data>
  <data name="param_rotate_tooltip" xml:space="preserve">
    <value>Rotate image at every iteration. Positive values mean clockwise rotation</value>
  </data>
  <data name="param_scale" xml:space="preserve">
    <value>Scaling</value>
  </data>
  <data name="param_scale_tooltip" xml:space="preserve">
    <value>Scale image at every iteration</value>
  </data>
  <data name="param_shrink" xml:space="preserve">
    <value>Shrink</value>
  </data>
  <data name="param_shrink_tooltip" xml:space="preserve">
    <value>Shrink image to maximum side length of 300px. Increases proccessing performance.</value>
  </data>
  <data name="param_source_picture" xml:space="preserve">
    <value>Source picture</value>
  </data>
  <data name="param_thumbnail_size" xml:space="preserve">
    <value>Thumbnail size</value>
  </data>
  <data name="report_additional_information" xml:space="preserve">
    <value>Enter additional information</value>
  </data>
  <data name="report_author" xml:space="preserve">
    <value>Author name</value>
  </data>
  <data name="report_by" xml:space="preserve">
    <value>by</value>
  </data>
  <data name="report_date" xml:space="preserve">
    <value>date</value>
  </data>
  <data name="report_parameter" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="report_report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="report_report_name" xml:space="preserve">
    <value>Report name</value>
  </data>
  <data name="report_results" xml:space="preserve">
    <value>Results</value>
  </data>
  <data name="report_series" xml:space="preserve">
    <value>series</value>
  </data>
</root>